// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SERVOSA.SAIR.WEB.Controllers
{
    public partial class VehicleController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VehicleController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DeleteVehicle()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteVehicle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateVehicle()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateVehicle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CreateVehicle()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateVehicle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult LoadTablaData()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadTablaData);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SearchVehicleForAutoComplete()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchVehicleForAutoComplete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VehicleController Actions { get { return MVC.Vehicle; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Vehicle";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Vehicle";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ListVehicles = "ListVehicles";
            public readonly string DeleteVehicle = "DeleteVehicle";
            public readonly string UpdateVehicle = "UpdateVehicle";
            public readonly string CreateVehicle = "CreateVehicle";
            public readonly string LoadTablaData = "LoadTablaData";
            public readonly string GetVehiculos = "GetVehiculos";
            public readonly string GetVehicleBrands = "GetVehicleBrands";
            public readonly string GetVehicleStates = "GetVehicleStates";
            public readonly string GetVehiclesUnitTypes = "GetVehiclesUnitTypes";
            public readonly string SearchVehicleForAutoComplete = "SearchVehicleForAutoComplete";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ListVehicles = "ListVehicles";
            public const string DeleteVehicle = "DeleteVehicle";
            public const string UpdateVehicle = "UpdateVehicle";
            public const string CreateVehicle = "CreateVehicle";
            public const string LoadTablaData = "LoadTablaData";
            public const string GetVehiculos = "GetVehiculos";
            public const string GetVehicleBrands = "GetVehicleBrands";
            public const string GetVehicleStates = "GetVehicleStates";
            public const string GetVehiclesUnitTypes = "GetVehiclesUnitTypes";
            public const string SearchVehicleForAutoComplete = "SearchVehicleForAutoComplete";
        }


        static readonly ActionParamsClass_ListVehicles s_params_ListVehicles = new ActionParamsClass_ListVehicles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListVehicles ListVehiclesParams { get { return s_params_ListVehicles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListVehicles
        {
            public readonly string jtStartIndex = "jtStartIndex";
            public readonly string jtPageSize = "jtPageSize";
            public readonly string jtSorting = "jtSorting";
        }
        static readonly ActionParamsClass_DeleteVehicle s_params_DeleteVehicle = new ActionParamsClass_DeleteVehicle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteVehicle DeleteVehicleParams { get { return s_params_DeleteVehicle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteVehicle
        {
            public readonly string Codigo = "Codigo";
        }
        static readonly ActionParamsClass_UpdateVehicle s_params_UpdateVehicle = new ActionParamsClass_UpdateVehicle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateVehicle UpdateVehicleParams { get { return s_params_UpdateVehicle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateVehicle
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CreateVehicle s_params_CreateVehicle = new ActionParamsClass_CreateVehicle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateVehicle CreateVehicleParams { get { return s_params_CreateVehicle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateVehicle
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_LoadTablaData s_params_LoadTablaData = new ActionParamsClass_LoadTablaData();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LoadTablaData LoadTablaDataParams { get { return s_params_LoadTablaData; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LoadTablaData
        {
            public readonly string tableName = "tableName";
        }
        static readonly ActionParamsClass_SearchVehicleForAutoComplete s_params_SearchVehicleForAutoComplete = new ActionParamsClass_SearchVehicleForAutoComplete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SearchVehicleForAutoComplete SearchVehicleForAutoCompleteParams { get { return s_params_SearchVehicleForAutoComplete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SearchVehicleForAutoComplete
        {
            public readonly string searchText = "searchText";
            public readonly string maxResults = "maxResults";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string VehicleDataTable = "VehicleDataTable";
            }
            public readonly string Index = "~/Views/Vehicle/Index.cshtml";
            public readonly string VehicleDataTable = "~/Views/Vehicle/VehicleDataTable.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_VehicleController : SERVOSA.SAIR.WEB.Controllers.VehicleController
    {
        public T4MVC_VehicleController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ListVehiclesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int jtStartIndex, int jtPageSize, string jtSorting);

        [NonAction]
        public override System.Web.Mvc.JsonResult ListVehicles(int jtStartIndex, int jtPageSize, string jtSorting)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListVehicles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtStartIndex", jtStartIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtPageSize", jtPageSize);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtSorting", jtSorting);
            ListVehiclesOverride(callInfo, jtStartIndex, jtPageSize, jtSorting);
            return callInfo;
        }

        [NonAction]
        partial void DeleteVehicleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int Codigo);

        [NonAction]
        public override System.Web.Mvc.JsonResult DeleteVehicle(int Codigo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteVehicle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Codigo", Codigo);
            DeleteVehicleOverride(callInfo, Codigo);
            return callInfo;
        }

        [NonAction]
        partial void UpdateVehicleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, SERVOSA.SAIR.SERVICE.Models.VehicleServiceModel model);

        [NonAction]
        public override System.Web.Mvc.JsonResult UpdateVehicle(SERVOSA.SAIR.SERVICE.Models.VehicleServiceModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateVehicle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateVehicleOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CreateVehicleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, SERVOSA.SAIR.SERVICE.Models.VehicleServiceModel model);

        [NonAction]
        public override System.Web.Mvc.JsonResult CreateVehicle(SERVOSA.SAIR.SERVICE.Models.VehicleServiceModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateVehicle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CreateVehicleOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void LoadTablaDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string tableName);

        [NonAction]
        public override System.Web.Mvc.JsonResult LoadTablaData(string tableName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadTablaData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableName", tableName);
            LoadTablaDataOverride(callInfo, tableName);
            return callInfo;
        }

        [NonAction]
        partial void GetVehiculosOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetVehiculos()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetVehiculos);
            GetVehiculosOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetVehicleBrandsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetVehicleBrands()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetVehicleBrands);
            GetVehicleBrandsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetVehicleStatesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetVehicleStates()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetVehicleStates);
            GetVehicleStatesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetVehiclesUnitTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetVehiclesUnitTypes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetVehiclesUnitTypes);
            GetVehiclesUnitTypesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchVehicleForAutoCompleteOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string searchText, int maxResults);

        [NonAction]
        public override System.Web.Mvc.JsonResult SearchVehicleForAutoComplete(string searchText, int maxResults)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SearchVehicleForAutoComplete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchText", searchText);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "maxResults", maxResults);
            SearchVehicleForAutoCompleteOverride(callInfo, searchText, maxResults);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114

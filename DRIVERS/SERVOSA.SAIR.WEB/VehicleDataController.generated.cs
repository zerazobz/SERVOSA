// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SERVOSA.SAIR.WEB.Controllers
{
    public partial class VehicleDataController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VehicleDataController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Data()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Data);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CabeceraVehiculo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CabeceraVehiculo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DatosVariableVehiculo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DatosVariableVehiculo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFileModalManager()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFileModalManager);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DownloadVariable()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadVariable);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult DownloadVehicleData()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.DownloadVehicleData);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VehicleDataController Actions { get { return MVC.VehicleData; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "VehicleData";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "VehicleData";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Data = "Data";
            public readonly string CabeceraVehiculo = "CabeceraVehiculo";
            public readonly string DatosVariableVehiculo = "DatosVariableVehiculo";
            public readonly string GetFileModalManager = "GetFileModalManager";
            public readonly string ListFilesByTableAndVehicle = "ListFilesByTableAndVehicle";
            public readonly string DeleteFile = "DeleteFile";
            public readonly string DownloadVariable = "DownloadVariable";
            public readonly string DownloadVehicleData = "DownloadVehicleData";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Data = "Data";
            public const string CabeceraVehiculo = "CabeceraVehiculo";
            public const string DatosVariableVehiculo = "DatosVariableVehiculo";
            public const string GetFileModalManager = "GetFileModalManager";
            public const string ListFilesByTableAndVehicle = "ListFilesByTableAndVehicle";
            public const string DeleteFile = "DeleteFile";
            public const string DownloadVariable = "DownloadVariable";
            public const string DownloadVehicleData = "DownloadVehicleData";
        }


        static readonly ActionParamsClass_Data s_params_Data = new ActionParamsClass_Data();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Data DataParams { get { return s_params_Data; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Data
        {
            public readonly string vehicleCode = "vehicleCode";
        }
        static readonly ActionParamsClass_CabeceraVehiculo s_params_CabeceraVehiculo = new ActionParamsClass_CabeceraVehiculo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CabeceraVehiculo CabeceraVehiculoParams { get { return s_params_CabeceraVehiculo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CabeceraVehiculo
        {
            public readonly string vehicleCode = "vehicleCode";
        }
        static readonly ActionParamsClass_DatosVariableVehiculo s_params_DatosVariableVehiculo = new ActionParamsClass_DatosVariableVehiculo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DatosVariableVehiculo DatosVariableVehiculoParams { get { return s_params_DatosVariableVehiculo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DatosVariableVehiculo
        {
            public readonly string vehicleCode = "vehicleCode";
            public readonly string variableName = "variableName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetFileModalManager s_params_GetFileModalManager = new ActionParamsClass_GetFileModalManager();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFileModalManager GetFileModalManagerParams { get { return s_params_GetFileModalManager; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFileModalManager
        {
            public readonly string tableName = "tableName";
            public readonly string vehicleCode = "vehicleCode";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ListFilesByTableAndVehicle s_params_ListFilesByTableAndVehicle = new ActionParamsClass_ListFilesByTableAndVehicle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListFilesByTableAndVehicle ListFilesByTableAndVehicleParams { get { return s_params_ListFilesByTableAndVehicle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListFilesByTableAndVehicle
        {
            public readonly string jtStartIndex = "jtStartIndex";
            public readonly string jtPageSize = "jtPageSize";
            public readonly string jtSorting = "jtSorting";
            public readonly string tableName = "tableName";
            public readonly string vehicleCode = "vehicleCode";
        }
        static readonly ActionParamsClass_DeleteFile s_params_DeleteFile = new ActionParamsClass_DeleteFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteFile DeleteFileParams { get { return s_params_DeleteFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteFile
        {
            public readonly string ComposedPrimaryKey = "ComposedPrimaryKey";
        }
        static readonly ActionParamsClass_DownloadVariable s_params_DownloadVariable = new ActionParamsClass_DownloadVariable();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadVariable DownloadVariableParams { get { return s_params_DownloadVariable; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadVariable
        {
            public readonly string tableName = "tableName";
        }
        static readonly ActionParamsClass_DownloadVehicleData s_params_DownloadVehicleData = new ActionParamsClass_DownloadVehicleData();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadVehicleData DownloadVehicleDataParams { get { return s_params_DownloadVehicleData; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadVehicleData
        {
            public readonly string vehicleId = "vehicleId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CabeceraVehiculo = "CabeceraVehiculo";
                public readonly string Data = "Data";
                public readonly string DatosVariableVehiculo = "DatosVariableVehiculo";
                public readonly string GetFileModalManager = "GetFileModalManager";
            }
            public readonly string CabeceraVehiculo = "~/Views/VehicleData/CabeceraVehiculo.cshtml";
            public readonly string Data = "~/Views/VehicleData/Data.cshtml";
            public readonly string DatosVariableVehiculo = "~/Views/VehicleData/DatosVariableVehiculo.cshtml";
            public readonly string GetFileModalManager = "~/Views/VehicleData/GetFileModalManager.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_VehicleDataController : SERVOSA.SAIR.WEB.Controllers.VehicleDataController
    {
        public T4MVC_VehicleDataController() : base(Dummy.Instance) { }

        [NonAction]
        partial void DataOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vehicleCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult Data(int vehicleCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Data);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleCode", vehicleCode);
            DataOverride(callInfo, vehicleCode);
            return callInfo;
        }

        [NonAction]
        partial void CabeceraVehiculoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vehicleCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult CabeceraVehiculo(int vehicleCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CabeceraVehiculo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleCode", vehicleCode);
            CabeceraVehiculoOverride(callInfo, vehicleCode);
            return callInfo;
        }

        [NonAction]
        partial void DatosVariableVehiculoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vehicleCode, string variableName);

        [NonAction]
        public override System.Web.Mvc.ActionResult DatosVariableVehiculo(int vehicleCode, string variableName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DatosVariableVehiculo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleCode", vehicleCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "variableName", variableName);
            DatosVariableVehiculoOverride(callInfo, vehicleCode, variableName);
            return callInfo;
        }

        [NonAction]
        partial void DatosVariableVehiculoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SERVOSA.SAIR.SERVICE.Models.VehicleVariableDataServiceModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult DatosVariableVehiculo(SERVOSA.SAIR.SERVICE.Models.VehicleVariableDataServiceModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DatosVariableVehiculo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            DatosVariableVehiculoOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetFileModalManagerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string tableName, int vehicleCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFileModalManager(string tableName, int vehicleCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFileModalManager);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableName", tableName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleCode", vehicleCode);
            GetFileModalManagerOverride(callInfo, tableName, vehicleCode);
            return callInfo;
        }

        [NonAction]
        partial void GetFileModalManagerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SERVOSA.SAIR.SERVICE.Models.TableData.VehicleFiles model);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFileModalManager(SERVOSA.SAIR.SERVICE.Models.TableData.VehicleFiles model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFileModalManager);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            GetFileModalManagerOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ListFilesByTableAndVehicleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int jtStartIndex, int jtPageSize, string jtSorting, string tableName, int? vehicleCode);

        [NonAction]
        public override System.Web.Mvc.JsonResult ListFilesByTableAndVehicle(int jtStartIndex, int jtPageSize, string jtSorting, string tableName, int? vehicleCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListFilesByTableAndVehicle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtStartIndex", jtStartIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtPageSize", jtPageSize);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtSorting", jtSorting);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableName", tableName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleCode", vehicleCode);
            ListFilesByTableAndVehicleOverride(callInfo, jtStartIndex, jtPageSize, jtSorting, tableName, vehicleCode);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ComposedPrimaryKey);

        [NonAction]
        public override System.Web.Mvc.JsonResult DeleteFile(string ComposedPrimaryKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ComposedPrimaryKey", ComposedPrimaryKey);
            DeleteFileOverride(callInfo, ComposedPrimaryKey);
            return callInfo;
        }

        [NonAction]
        partial void DownloadVariableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string tableName);

        [NonAction]
        public override System.Web.Mvc.ActionResult DownloadVariable(string tableName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadVariable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tableName", tableName);
            DownloadVariableOverride(callInfo, tableName);
            return callInfo;
        }

        [NonAction]
        partial void DownloadVehicleDataOverride(T4MVC_System_Web_Mvc_FileResult callInfo, int vehicleId);

        [NonAction]
        public override System.Web.Mvc.FileResult DownloadVehicleData(int vehicleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.DownloadVehicleData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vehicleId", vehicleId);
            DownloadVehicleDataOverride(callInfo, vehicleId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
